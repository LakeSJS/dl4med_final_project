/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/lib/python3.11/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:654: Checkpoint directory /gpfs/data/oermannlab/users/slj9342/dl4med_final_project/checkpoints exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name       | Type                   | Params | Mode
--------------------------------------------------------------
0 | acc_cnn    | ACCFeatureExtractorCNN | 155 K  | train
1 | lstm       | LSTM                   | 217 K  | train
2 | classifier | Linear                 | 645    | train
3 | criterion  | CrossEntropyLoss       | 0      | train
--------------------------------------------------------------
374 K     Trainable params
0         Non-trainable params
374 K     Total params
1.496     Total estimated model params size (MB)
16        Modules in train mode
0         Modules in eval mode
EXECUTABLE/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/bin/pythonEXECUTABLE
Non-acc shape: torch.Size([1200, 5])
ACC shape: torch.Size([192000])
Labels shape: torch.Size([1200])
Output shape: torch.Size([1, 16, 2929]) (batch_size, cnn_output_channels, epoch_samples)
CNN downsampling factor: 65.55138272447934
[DEBUG] ACC CNN output shape: torch.Size([1, 16, 2929])
[DEBUG] NON_ACC input shape: torch.Size([1, 1200, 5])
[DEBUG] Downsampling ACC features from 2929 to 1200
[DEBUG] ACC features shape: torch.Size([1, 16, 1200])
[DEBUG] non-ACC features shape: torch.Size([1, 1200, 5])
[DEBUG] LSTM input shape: torch.Size([1200, 1, 21])
[DEBUG] LSTM output shape: torch.Size([1200, 1, 64])
[DEBUG] Classifier output shape: torch.Size([1200, 1, 5])
EXECUTABLE/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/bin/pythonEXECUTABLE
Non-acc shape: torch.Size([1200, 5])
ACC shape: torch.Size([192000])
Labels shape: torch.Size([1200])
Output shape: torch.Size([1, 16, 2929]) (batch_size, cnn_output_channels, epoch_samples)
CNN downsampling factor: 65.55138272447934
[DEBUG] ACC CNN output shape: torch.Size([1, 16, 2929])
[DEBUG] NON_ACC input shape: torch.Size([1, 1200, 5])
[DEBUG] Downsampling ACC features from 2929 to 1200
[DEBUG] ACC features shape: torch.Size([1, 16, 1200])
[DEBUG] non-ACC features shape: torch.Size([1, 1200, 5])
[DEBUG] LSTM input shape: torch.Size([1200, 1, 21])
[DEBUG] LSTM output shape: torch.Size([1200, 1, 64])
[DEBUG] Classifier output shape: torch.Size([1200, 1, 5])
Non-acc shape: torch.Size([1200, 5])
ACC shape: torch.Size([192000])
Labels shape: torch.Size([1200])
Output shape: torch.Size([1, 16, 2929]) (batch_size, cnn_output_channels, epoch_samples)
CNN downsampling factor: 65.55138272447934
[DEBUG] ACC CNN output shape: torch.Size([1, 16, 2929])
[DEBUG] NON_ACC input shape: torch.Size([1, 1200, 5])
[DEBUG] Downsampling ACC features from 2929 to 1200
[DEBUG] ACC features shape: torch.Size([1, 16, 1200])
[DEBUG] non-ACC features shape: torch.Size([1, 1200, 5])
[DEBUG] LSTM input shape: torch.Size([1200, 1, 21])
[DEBUG] LSTM output shape: torch.Size([1200, 1, 64])
[DEBUG] Classifier output shape: torch.Size([1200, 1, 5])
/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/lib/python3.11/site-packages/lightning_fabric/plugins/environments/slurm.py:204: The `srun` command is available on your system but is not used. HINT: If your intention is to run Lightning on SLURM, prepend your python command with `srun` like so: srun python /gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4m ...
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/lib/python3.11/site-packages/pytorch_lightning/loggers/wandb.py:397: There is a wandb run already in progress and newly created instances of `WandbLogger` will reuse this run. If this is not desired, call `wandb.finish()` before instantiating `WandbLogger`.
/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/lib/python3.11/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:654: Checkpoint directory /gpfs/data/oermannlab/users/slj9342/dl4med_final_project/checkpoints exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name       | Type                   | Params | Mode
--------------------------------------------------------------
0 | acc_cnn    | ACCFeatureExtractorCNN | 155 K  | train
1 | lstm       | LSTM                   | 217 K  | train
2 | classifier | Linear                 | 645    | train
3 | criterion  | CrossEntropyLoss       | 0      | train
--------------------------------------------------------------
374 K     Trainable params
0         Non-trainable params
374 K     Total params
1.497     Total estimated model params size (MB)
16        Modules in train mode
0         Modules in eval mode
EXECUTABLE/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/bin/pythonEXECUTABLE
/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/lib/python3.11/site-packages/lightning_fabric/plugins/environments/slurm.py:204: The `srun` command is available on your system but is not used. HINT: If your intention is to run Lightning on SLURM, prepend your python command with `srun` like so: srun python /gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4m ...
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/lib/python3.11/site-packages/pytorch_lightning/loggers/wandb.py:397: There is a wandb run already in progress and newly created instances of `WandbLogger` will reuse this run. If this is not desired, call `wandb.finish()` before instantiating `WandbLogger`.
/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/lib/python3.11/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:654: Checkpoint directory /gpfs/data/oermannlab/users/slj9342/dl4med_final_project/checkpoints exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name       | Type                   | Params | Mode
--------------------------------------------------------------
0 | acc_cnn    | ACCFeatureExtractorCNN | 155 K  | train
1 | lstm       | LSTM                   | 217 K  | train
2 | classifier | Linear                 | 645    | train
3 | criterion  | CrossEntropyLoss       | 0      | train
--------------------------------------------------------------
374 K     Trainable params
0         Non-trainable params
374 K     Total params
1.497     Total estimated model params size (MB)
16        Modules in train mode
0         Modules in eval mode
/gpfs/data/oermannlab/users/slj9342/.conda/envs/dl4med_25/lib/python3.11/site-packages/pytorch_lightning/loops/fit_loop.py:310: The number of training batches (6) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.
Metric val_loss improved. New best score: 1.558
Metric val_loss improved by 0.037 >= min_delta = 0.0. New best score: 1.521
Metric val_loss improved by 0.036 >= min_delta = 0.0. New best score: 1.485
Metric val_loss improved by 0.037 >= min_delta = 0.0. New best score: 1.449
Metric val_loss improved by 0.035 >= min_delta = 0.0. New best score: 1.414
Metric val_loss improved by 0.038 >= min_delta = 0.0. New best score: 1.376
Metric val_loss improved by 0.040 >= min_delta = 0.0. New best score: 1.336
Metric val_loss improved by 0.040 >= min_delta = 0.0. New best score: 1.296
Metric val_loss improved by 0.042 >= min_delta = 0.0. New best score: 1.255
Metric val_loss improved by 0.040 >= min_delta = 0.0. New best score: 1.215
Metric val_loss improved by 0.033 >= min_delta = 0.0. New best score: 1.182
Metric val_loss improved by 0.022 >= min_delta = 0.0. New best score: 1.160
Metric val_loss improved by 0.013 >= min_delta = 0.0. New best score: 1.147
Metric val_loss improved by 0.005 >= min_delta = 0.0. New best score: 1.141
Metric val_loss improved by 0.004 >= min_delta = 0.0. New best score: 1.138
Metric val_loss improved by 0.001 >= min_delta = 0.0. New best score: 1.137
Metric val_loss improved by 0.001 >= min_delta = 0.0. New best score: 1.136
Metric val_loss improved by 0.000 >= min_delta = 0.0. New best score: 1.136
Metric val_loss improved by 0.001 >= min_delta = 0.0. New best score: 1.135
Metric val_loss improved by 0.001 >= min_delta = 0.0. New best score: 1.135
Metric val_loss improved by 0.000 >= min_delta = 0.0. New best score: 1.134
Metric val_loss improved by 0.001 >= min_delta = 0.0. New best score: 1.133
Metric val_loss improved by 0.001 >= min_delta = 0.0. New best score: 1.132
Metric val_loss improved by 0.001 >= min_delta = 0.0. New best score: 1.131
Metric val_loss improved by 0.001 >= min_delta = 0.0. New best score: 1.130
Metric val_loss improved by 0.000 >= min_delta = 0.0. New best score: 1.129
Metric val_loss improved by 0.001 >= min_delta = 0.0. New best score: 1.128
Metric val_loss improved by 0.000 >= min_delta = 0.0. New best score: 1.128
Metric val_loss improved by 0.001 >= min_delta = 0.0. New best score: 1.127
Metric val_loss improved by 0.000 >= min_delta = 0.0. New best score: 1.127
Monitored metric val_loss did not improve in the last 3 records. Best score: 1.127. Signaling Trainer to stop.
